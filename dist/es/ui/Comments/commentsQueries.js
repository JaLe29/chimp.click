import{gql as t}from"apollo-boost";function e(t,e){return e||(e=t.slice(0)),Object.freeze(Object.defineProperties(t,{raw:{value:Object.freeze(e)}}))}function n(){var t=e(["\n\tmutation createComment($text: String!, $code: String!, $user: String!, $authenticationType: AuthenticationType!) {\n\t\tcreateComment(data: { text: $text, code: $code, user: $user, authenticationType: $authenticationType }) {\n\t\t\tid\n\t\t\ttext\n\t\t\tcreatedAt\n\t\t\tuser\n\t\t\tauthenticationType,\n\t\t}\n\t}\n"]);return n=function(){return t},t}function r(){var t=e(["\n\tsubscription newComment($code: String!) {\n\t\tnewComment (code: $code) {\n\t\t\tid\n\t\t\ttext\n\t\t\tcreatedAt\n\t\t\tuser\n\t\t\tauthenticationType\n\t\t}\n\t}\n"]);return r=function(){return t},t}function o(){var t=e(["\n\tquery getComments($code: String!) {\n\t\tgetComments(where: { code: $code }) {\n\t\t\tid\n\t\t\ttext\n\t\t\tcreatedAt\n\t\t\tuser\n\t\tauthenticationType\n\t\t}\n\t}\n"]);return o=function(){return t},t}var i=t(o()),c=t(r()),u=t(n());export{u as ADD_COMMENT,i as GET_COMMENTS,c as SUBSCRIBE_NEW_COMMENT};
